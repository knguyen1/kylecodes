{"version":3,"sources":["flashcards.js"],"names":["app","angular","module","controller","$scope","FlashcardFactory","filter","urls","emails","text","length","match","replace","factory","flashcards","currentCard","push","getCards","getSize","getCurrentCard","setCurrentCard","n","showNextCard","len","showPreviousCard","setCard","card","directive","restrict","templateUrl","link","scope","element","attrs","showModal","toggleModal","addCard","cards","require","showAnswer","toggleAnswer","ctrl","toggle","d","cardQuestion","cardAnswer","createCard","q","a","size"],"mappings":"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","file":"flashcards.js","sourcesContent":["/**\r\n * Created by Khoa on 1/7/2017.\r\n */\r\n\r\n\"use strict\";\r\n\r\nconst app = angular.module('Flashcards', ['ngSanitize']);\r\n\r\napp.controller('FlashcardsCtrl', ['$scope', 'FlashcardFactory', ($scope, FlashcardFactory) => {\r\n    /**\r\n     * Hello world! Main controller... Nothing to see here.\r\n     */\r\n}]);\r\n\r\n/**\r\n * Filters\r\n */\r\n\r\napp.filter('parseUrl', [() => {\r\n    const urls = /(\\b(https?|ftp):\\/\\/[A-Z0-9+&@#\\/%?=~_|!:,.;-]*[-A-Z0-9+&@#\\/%=~_|])/gim\r\n        ,emails = /(\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,6})/gim;\r\n\r\n    return (text) => {\r\n        if(text.length === 0)\r\n            return '';\r\n\r\n        if(text.match(urls))\r\n            text = text.replace(urls, \"<a href=\\\"$1\\\" target=\\\"_blank\\\">$1</a>\");\r\n\r\n        if(text.match(emails))\r\n            text = text.replace(emails, \"<a href=\\\"mailto:$1\\\">$1</a>\");\r\n        \r\n        return text;\r\n    };\r\n}]);\r\n\r\n/**\r\n * Factory\r\n */\r\napp.factory('FlashcardFactory', [() => {\r\n    let flashcards = [],\r\n        currentCard = 0;\r\n\r\n    flashcards.push({\r\n        'id': 0,\r\n        'question': 'Who is Kyle Nguyen?',\r\n        'answer': 'An awesome developer.'\r\n    });\r\n\r\n    flashcards.push({\r\n        'id': 1,\r\n        'question': 'How do I interview Kyle Nguyen?',\r\n        'answer': 'Send me an email here: dbo.kylenguyen@gmail.com.'\r\n    });\r\n\r\n    flashcards.push({\r\n        'id': 2,\r\n        'question': 'What are Kyle\\'s favourite languages?',\r\n        'answer': 'C# ASP.NET, Javascript, HTML5/CSS'\r\n    });\r\n\r\n    return {\r\n        getCards: () => {\r\n            return flashcards;\r\n        },\r\n        getSize: () => {\r\n            return flashcards.length;\r\n        },\r\n        getCurrentCard: () => {\r\n            return currentCard;\r\n        },\r\n        setCurrentCard: (n) => {\r\n            if(n <= flashcards.length && n > -1)\r\n                currentCard = n;\r\n        },\r\n        showNextCard: () => {\r\n            let len = flashcards.length;\r\n            if(currentCard + 1 !== len)\r\n                currentCard++;\r\n        },\r\n        showPreviousCard: () => {\r\n            if(currentCard !== 0)\r\n                currentCard--;\r\n        },\r\n        setCard: (card) => {\r\n            flashcards.push(card);\r\n        }\r\n    };\r\n}]);\r\n\r\n/**\r\n * Directives\r\n */\r\n\r\n//the header directive contains the re-usable header component\r\napp.directive('flashcardsHeader', [() => {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'flheader.html',\r\n        link: (scope, element, attrs) => {\r\n\r\n        }\r\n    }\r\n}]);\r\n\r\n//the card directive contains the card\r\n//cards should have some properties\r\n//1. is the answer showing?\r\n//2. the prompt\r\n//3. the answer\r\n//4. the card id\r\napp.directive('cardContainer', [() => {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {},\r\n        templateUrl: 'cardcontainer.html',\r\n        controller: ($scope, FlashcardFactory) => {\r\n            $scope.showModal = false;\r\n            $scope.toggleModal = () => {\r\n                $scope.showModal = !$scope.showModal;\r\n            }\r\n            \r\n            $scope.addCard = () => {\r\n                $scope.showModal = true;\r\n            }\r\n            \r\n            $scope.cards = FlashcardFactory.getCards();\r\n            $scope.getCurrentCard = () => {\r\n                return FlashcardFactory.getCurrentCard();\r\n            }\r\n            \r\n            $scope.setCurrentCard = (n) => {\r\n                FlashcardFactory.setCurrentCard(n);\r\n            }\r\n        },\r\n        link: (scope, element, attrs) => {\r\n        }\r\n    }\r\n}]);\r\n\r\napp.directive('card', [() => {\r\n    return {\r\n        restrict: 'E',\r\n        require: '^cardContainer',\r\n        scope: {\r\n            card: '=cardData'\r\n        },\r\n        templateUrl: 'card.html',\r\n        controller: ($scope, FlashcardFactory) => {\r\n            $scope.showAnswer = false;\r\n            $scope.toggleAnswer = () => {\r\n                $scope.showAnswer = !$scope.showAnswer;\r\n            };\r\n            \r\n            $scope.getSize = () => {\r\n                return FlashcardFactory.getSize();\r\n            };\r\n\r\n            //set the show answer state to false then show previous or next card\r\n            $scope.showPreviousCard = () => {\r\n                $scope.showAnswer = false;\r\n                FlashcardFactory.showPreviousCard();\r\n            };\r\n\r\n            $scope.showNextCard = () => {\r\n                $scope.showAnswer = false;\r\n                FlashcardFactory.showNextCard();\r\n            };\r\n        },\r\n        link: (scope, element, attrs, ctrl) => {\r\n        }\r\n    };\r\n}]);\r\n\r\napp.directive('createCard', [() => {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            toggle: '&'\r\n        },\r\n        templateUrl: 'createcard.html',\r\n        controller: ($scope, FlashcardFactory) => {\r\n            $scope.d = () => {\r\n                $scope.toggle();\r\n            }\r\n            \r\n            $scope.cardQuestion = '';\r\n            $scope.cardAnswer = '';\r\n            \r\n            $scope.createCard = (q, a) => {\r\n                const size = FlashcardFactory.getSize();\r\n                const card = {\r\n                    'id': size,\r\n                    'question': q,\r\n                    'answer': a\r\n                }\r\n\r\n                FlashcardFactory.setCard(card);\r\n                $scope.d();\r\n            }\r\n        }\r\n    }\r\n}]);"]}
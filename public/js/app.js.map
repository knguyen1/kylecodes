{"version":3,"sources":["app.js"],"names":["screenWidth","screenHeight","STARTING_PARTICLE_NUM","PARTICLE_RADIUS","MAX_VELOCITY","app","angular","module","controller","$scope","animate","dots","moreDots","num","addParticle","buildShape","x","Math","floor","random","y","velX","velY","i","push","init","window","innerWidth","innerHeight","animator","directive","$window","scope","element","attributes","w","$watch","newValue","oldValue","width","height","resizeDiv","offSet","bind","$apply","restrict","link","attrs","addClass","randBlur","css","topClass","kyleTitle","initialOffset","offset","top","currentTop","scrollTop","pageYOffset","removeClass","removeAttr","fadeSpeed","fadeOnScroll","scrolledPercentage","max","factory","$rootScope","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","tick","shapes","shape","now","maxY","maxX","document","body","clientWidth","multiplier","length","nextPosX","nextPosY"],"mappings":"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","file":"app.js","sourcesContent":["/**\r\n * Created by Khoa on 12/27/2016.\r\n */\r\n\r\n\"use strict\";\r\n\r\n//configs\r\nlet screenWidth, screenHeight;\r\nconst STARTING_PARTICLE_NUM = 75;\r\nconst PARTICLE_RADIUS = 3;\r\nconst MAX_VELOCITY = 200;\r\n\r\nconst app = angular.module(\"app\", []);\r\n\r\napp.controller('MainCtrl', ['$scope','animate', ($scope, animate) => {\r\n    $scope.dots = [];\r\n\r\n    $scope.moreDots = (num) => {\r\n        addParticle(num);\r\n    }\r\n\r\n    //build the dot with starting position x y and vector\r\n    const buildShape = () => {\r\n        return {\r\n            x: Math.floor(Math.random() * screenWidth - PARTICLE_RADIUS * 2) + 1 + PARTICLE_RADIUS,\r\n            y: Math.floor(Math.random() * screenHeight - PARTICLE_RADIUS * 2) + 1 + PARTICLE_RADIUS,\r\n            velX: Math.random() * MAX_VELOCITY - MAX_VELOCITY/2,\r\n            velY: Math.random() * MAX_VELOCITY - MAX_VELOCITY/2\r\n        };\r\n    }\r\n\r\n    const addParticle = (num) => {\r\n        for(let i = 0; i < num; i++) {\r\n            $scope.dots.push(buildShape());\r\n        }\r\n    }\r\n\r\n    //initialize page\r\n    const init = () => {\r\n\r\n        screenWidth = window.innerWidth;\r\n        screenHeight = window.innerHeight;\r\n\r\n        addParticle(STARTING_PARTICLE_NUM);\r\n        animator($scope.dots, animate);\r\n    }\r\n\r\n    init();\r\n}]);\r\n\r\n/**\r\n * On-resize directive\r\n * This directive resizes the div to the size of the entire window.\r\n **/\r\napp.directive('resizeOnWindow', ($window) => {\r\n    return (scope, element, attributes) => {\r\n        const w = angular.element($window);\r\n        scope.$watch(() => {\r\n            return {\r\n                'height': window.innerHeight,\r\n                'width': window.innerWidth\r\n            };\r\n        }, (newValue, oldValue) => {\r\n            screenWidth = newValue.width || window.innerWidth;\r\n            screenHeight = newValue.height || window.innerHeight;\r\n\r\n            scope.resizeDiv = (offSet) => {\r\n                return {\r\n                    'height': (newValue.height - offSet) + 'px',\r\n                    'width': '100%'\r\n                };\r\n            };\r\n        }, true);\r\n\r\n        w.bind('resize', () => {\r\n            scope.$apply();\r\n        })\r\n    }\r\n});\r\n\r\napp.directive('ball', ($window) => {\r\n    return {\r\n        restrict: 'E',\r\n        link: (scope, element, attrs) => {\r\n            const w = angular.element($window);\r\n            element.addClass('dot');\r\n\r\n            let randBlur = Math.random();\r\n            if(randBlur > 0.50)\r\n                element.addClass('dot-blur1');\r\n            else\r\n                element.addClass('dot-blur2');\r\n\r\n            scope.$watch(attrs.x, (x) => {\r\n                element.css('left', x + 'px');\r\n            });\r\n\r\n            scope.$watch(attrs.y, (y) => {\r\n                element.css('top', y + 'px');\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\napp.directive('kyleTitle', ['$window', ($window) => {\r\n    return {\r\n        restrict: 'A',\r\n        link: (scope, element, attrs) => {\r\n            const w = angular.element($window),\r\n                topClass = attrs.kyleTitle,\r\n                initialOffset = element.offset().top;\r\n\r\n            w.bind('scroll', () => {\r\n                let currentTop = w.scrollTop(); //get current pos\r\n\r\n                if(currentTop < initialOffset) {\r\n                    //move element up/down against the scroll direction\r\n                    element.css('top', -1 * $window.pageYOffset + 'px');\r\n                    element.removeClass(topClass);\r\n                }\r\n\r\n                //once current rect reaches 50, apply fixed\r\n                if(currentTop > (initialOffset / 2)) {\r\n                    element.addClass(topClass);\r\n                    element.removeAttr('style');\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\napp.directive('fadeOnScroll', ['$window', ($window) => {\r\n    return {\r\n        restrict: 'A',\r\n        link: (scope, element, attrs) => {\r\n            const w = angular.element($window),\r\n                fadeSpeed = attrs.fadeOnScroll;\r\n\r\n            const height = $window.innerHeight;\r\n            w.bind('scroll', () => {\r\n                let offSet = $window.pageYOffset,\r\n                    scrolledPercentage = (offSet / height) * fadeSpeed;\r\n\r\n                element.css('opacity', Math.max(1 - scrolledPercentage, 0));\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\n/**\r\n * Animate factory to be called to loop requestAnimationFrame\r\n */\r\napp.factory('animate',['$window', '$rootScope', ($window, $rootScope) => {\r\n    const requestAnimationFrame = $window.requestAnimationFrame\r\n        || $window.webkitRequestAnimationFrame\r\n        || $window.mozRequestAnimationFrame\r\n        || $window.oRequestAnimationFrame\r\n        || $window.msRequestAnimationFrame\r\n        || function(callback) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n\r\n    return (tick) => {\r\n        requestAnimationFrame(() => {\r\n            $rootScope.$apply(tick);\r\n        });\r\n    };\r\n}]);\r\n\r\n//function to animate dots on the screen\r\nconst animator = (shapes, animate) => {\r\n    (function tick(){\r\n        let i, shape, now;\r\n        const maxY = screenHeight,\r\n            maxX = document.body.clientWidth,\r\n            multiplier = -30;\r\n        //now = new Date().getTime();\r\n\r\n        for(i = 0; i < shapes.length; i++) {\r\n            shape = shapes[i];\r\n            //multiplier = (shape.timestamp || now) - now;\r\n\r\n            //shape.timestamp = now;\r\n\r\n            const nextPosX = shape.x + multiplier * shape.velX / 1000;\r\n            const nextPosY = shape.y + multiplier * shape.velY / 1000;\r\n\r\n            //bounce off walls\r\n            if(nextPosX < PARTICLE_RADIUS || nextPosX + PARTICLE_RADIUS > maxX)\r\n                shape.velX *= -1;\r\n\r\n            if(nextPosY < PARTICLE_RADIUS || nextPosY + PARTICLE_RADIUS > maxY)\r\n                shape.velY *= -1;\r\n\r\n            //update position\r\n            shape.x += multiplier * shape.velX / 1000;\r\n            shape.y += multiplier * shape.velY / 1000;\r\n\r\n            //if the window is resized, bring the balls with you\r\n            if(shape.x > maxX)\r\n                shape.x = maxX - PARTICLE_RADIUS;\r\n            if(shape.y > maxY)\r\n                shape.y = maxY - PARTICLE_RADIUS;\r\n\r\n            if(shape.x < 0)\r\n                shape.x = PARTICLE_RADIUS;\r\n            if(shape.y < PARTICLE_RADIUS)\r\n                shape.y = PARTICLE_RADIUS;\r\n        }\r\n\r\n        animate(tick);\r\n    })();\r\n}"]}